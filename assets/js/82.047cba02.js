(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{439:function(_,v,t){"use strict";t.r(v);var e=t(7),r=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("基于数据库的分布式锁主要通过数据库的约束或事务机制实现，主要分为以下三种方式：")]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("一、基于唯一索引/唯一约束的分布式锁")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("实现原理"),v("br"),_._v("\n• 创建一张锁表（如"),v("code",[_._v("lock_table")]),_._v("），包含字段"),v("code",[_._v("lock_key")]),_._v("（唯一索引）和"),v("code",[_._v("expire_time")]),_._v("（锁过期时间）。")]),_._v(" "),v("p",[_._v("• 加锁时插入一条"),v("code",[_._v("lock_key")]),_._v("对应的记录，利用唯一索引的排他性确保互斥；解锁时删除该记录。")]),_._v(" "),v("p",[_._v("• 若插入失败，则表明锁已被占用，需等待或重试。")])]),_._v(" "),v("li",[v("p",[_._v("优缺点"),v("br"),_._v("\n• 优点：实现简单，无需额外中间件；强一致性保障。")]),_._v(" "),v("p",[_._v("• 缺点：")]),_._v(" "),v("p",[_._v("◦ 性能低（QPS通常低于1k）。")]),_._v(" "),v("p",[_._v("◦ 死锁风险：若客户端宕机未释放锁，需通过定时任务清理过期锁记录。")]),_._v(" "),v("p",[_._v("◦ 需处理锁重入问题，可通过添加"),v("code",[_._v("owner")]),_._v("字段标识锁持有者。")])]),_._v(" "),v("li",[v("p",[_._v("适用场景"),v("br"),_._v("\n• 低频、高一致性要求的场景，如金融对账、低频任务调度。")])])]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("二、基于数据库悲观锁的分布式锁")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("实现原理"),v("br"),_._v("\n• 使用"),v("code",[_._v("SELECT ... FOR UPDATE")]),_._v("对指定行加行级锁，事务提交后自动释放。")]),_._v(" "),v("p",[_._v("• 例如："),v("code",[_._v("SELECT * FROM lock_table WHERE lock_key = 'xxx' FOR UPDATE")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("优缺点"),v("br"),_._v("\n• 优点：强一致性，天然支持事务隔离。")]),_._v(" "),v("p",[_._v("• 缺点：")]),_._v(" "),v("p",[_._v("◦ 性能较差（频繁的数据库IO操作）。")]),_._v(" "),v("p",[_._v("◦ 锁表风险：若未合理设计索引，可能导致表锁而非行锁。")]),_._v(" "),v("p",[_._v("◦ 需显式管理事务，避免长事务阻塞其他请求。")])]),_._v(" "),v("li",[v("p",[_._v("适用场景"),v("br"),_._v("\n• 需要严格事务控制的场景，如库存扣减（低频高一致性）。")])])]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("三、基于数据库乐观锁的分布式锁")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("实现原理"),v("br"),_._v("\n• 在业务表中添加"),v("code",[_._v("version")]),_._v("字段，更新时通过CAS（Compare and Swap）机制判断版本号是否一致。")]),_._v(" "),v("p",[_._v("• 示例SQL：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("UPDATE")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("table")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("SET")]),_._v(" count "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" count "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("-")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" version "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" version "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("+")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),_._v("  \n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("WHERE")]),_._v(" id "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("#{id} AND version = #{old_version}  ")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br")])]),v("p",[_._v("若更新失败，则重试或放弃。")])]),_._v(" "),v("li",[v("p",[_._v("优缺点"),v("br"),_._v("\n• 优点：无锁竞争，适合读多写少场景；轻量级。")]),_._v(" "),v("p",[_._v("• 缺点：")]),_._v(" "),v("p",[_._v("◦ 需业务层处理重试逻辑，增加复杂度。")]),_._v(" "),v("p",[_._v("◦ 高并发场景下频繁重试可能降低性能。")])]),_._v(" "),v("li",[v("p",[_._v("适用场景"),v("br"),_._v("\n• 并发冲突较少的场景，如账户余额更新、抢券等。")])])]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("四、优化与注意事项")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("锁超时机制"),v("br"),_._v("\n• 添加"),v("code",[_._v("expire_time")]),_._v("字段，通过定时任务清理过期锁，避免死锁。")])]),_._v(" "),v("li",[v("p",[_._v("客户端唯一标识"),v("br"),_._v("\n• 使用"),v("code",[_._v("owner")]),_._v("字段记录锁持有者（如服务名+IP+线程ID），确保只有持有者能释放锁。")])]),_._v(" "),v("li",[v("p",[_._v("性能优化"),v("br"),_._v("\n• 减少锁粒度（如行级锁）。")]),_._v(" "),v("p",[_._v("• 结合本地缓存减少数据库访问频率。")])]),_._v(" "),v("li",[v("p",[_._v("容错与重试"),v("br"),_._v("\n• 设置最大重试次数，避免无限等待。")])])]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("五、总结与选型建议")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("实现方式")]),_._v(" "),v("th",[_._v("适用场景")]),_._v(" "),v("th",[_._v("性能")]),_._v(" "),v("th",[_._v("复杂度")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("唯一索引")]),_._v(" "),v("td",[_._v("低频强一致（如金融对账）")]),_._v(" "),v("td",[_._v("低")]),_._v(" "),v("td",[_._v("低")])]),_._v(" "),v("tr",[v("td",[_._v("悲观锁（FOR UPDATE）")]),_._v(" "),v("td",[_._v("短事务、高一致性需求")]),_._v(" "),v("td",[_._v("中")]),_._v(" "),v("td",[_._v("中")])]),_._v(" "),v("tr",[v("td",[_._v("乐观锁")]),_._v(" "),v("td",[_._v("低冲突、读多写少场景")]),_._v(" "),v("td",[_._v("高")]),_._v(" "),v("td",[_._v("高")])])])]),_._v(" "),v("p",[_._v("建议："),v("br"),_._v("\n• 若系统已依赖数据库且并发量低，优先选择唯一索引或悲观锁。")]),_._v(" "),v("p",[_._v("• 高并发场景建议结合Redis或ZooKeeper实现分布式锁，避免数据库成为瓶颈。")])])}),[],!1,null,null,null);v.default=r.exports}}]);