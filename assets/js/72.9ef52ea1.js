(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{429:function(v,_,t){"use strict";t.r(_);var s=t(7),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("以下是Java后端开发中常见的分布式组件及其核心分布式算法的系统梳理，结合功能场景与算法实现进行说明：")]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"🧩-一、分布式协调与配置管理组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🧩-一、分布式协调与配置管理组件"}},[v._v("#")]),v._v(" 🧩 一、分布式协调与配置管理组件")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("Zookeeper")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("："),_("strong",[v._v("ZAB协议")]),v._v("（类Paxos的变种）\n"),_("ul",[_("li",[v._v("通过崩溃恢复（选主）和原子广播（写操作）实现强一致性")])])]),v._v(" "),_("li",[_("strong",[v._v("功能")]),v._v("：分布式锁、配置中心、集群选主（如Kafka早期元数据管理）")]),v._v(" "),_("li",[_("strong",[v._v("数据模型")]),v._v("：树形Znode结构 + Watcher监听机制")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Nacos")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("CP模式")]),v._v("：Raft算法（配置管理）")]),v._v(" "),_("li",[_("strong",[v._v("AP模式")]),v._v("：Distro协议（Gossip变种，服务发现）")])])]),v._v(" "),_("li",[_("strong",[v._v("功能")]),v._v("：动态服务发现、配置热更新（Spring Cloud Alibaba核心组件）")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Consul")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("："),_("strong",[v._v("Raft算法")]),v._v("（服务注册与KV存储） + "),_("strong",[v._v("Gossip协议")]),v._v("（跨节点健康检查）")]),v._v(" "),_("li",[_("strong",[v._v("功能")]),v._v("：多数据中心支持、服务网格集成（HashiCorp生态）")])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"📨-二、消息与事件驱动组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#📨-二、消息与事件驱动组件"}},[v._v("#")]),v._v(" 📨 二、消息与事件驱动组件")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("Kafka")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("KRaft模式")]),v._v("：自研Raft变种（取代Zookeeper的元数据管理）")]),v._v(" "),_("li",[_("strong",[v._v("ISR机制")]),v._v("（In-Sync Replicas）：基于副本同步列表的强一致性写入")])])]),v._v(" "),_("li",[_("strong",[v._v("分区分配算法")]),v._v("：RangeAssignor/RoundRobinAssignor（消费者负载均衡）")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("RabbitMQ")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心协议")]),v._v("："),_("strong",[v._v("AMQP高级消息队列协议")])]),v._v(" "),_("li",[_("strong",[v._v("路由算法")]),v._v("：\n"),_("ul",[_("li",[v._v("直连（Direct）、主题（Topic）、广播（Fanout）路由规则")]),v._v(" "),_("li",[v._v("死信队列（DLX）实现消息重试与延迟投递")])])])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"💾-三、数据存储与处理组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#💾-三、数据存储与处理组件"}},[v._v("#")]),v._v(" 💾 三、数据存储与处理组件")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("Redis Cluster")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("哈希槽分区")]),v._v("（16384 slots）："),_("code",[v._v("Slot = CRC16(key) % 16384")])]),v._v(" "),_("li",[_("strong",[v._v("Gossip协议")]),v._v("：节点状态同步与故障检测")])])]),v._v(" "),_("li",[_("strong",[v._v("高可用")]),v._v("：主从复制 + Raft-like选举（主节点故障切换）")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Elasticsearch")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("PacificA算法")]),v._v("：主分片同步写副本，基于版本号冲突检测")]),v._v(" "),_("li",[_("strong",[v._v("一致性哈希")]),v._v("：数据分片（Shard）定位")])])]),v._v(" "),_("li",[_("strong",[v._v("分布式检索")]),v._v("：Scatter-Gather模型合并分片结果")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Apache Cassandra")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("Gossip协议")]),v._v("：集群节点状态同步")]),v._v(" "),_("li",[_("strong",[v._v("一致性级别")]),v._v("：QUORUM/LOCAL_QUORUM（可调一致性）")])])])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"⚙️-四、任务调度与事务管理组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#⚙️-四、任务调度与事务管理组件"}},[v._v("#")]),v._v(" ⚙️ 四、任务调度与事务管理组件")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("分布式任务调度（如XXL-JOB）")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("数据库悲观锁")]),v._v("：抢占任务分片（如"),_("code",[v._v("SELECT ... FOR UPDATE")]),v._v("）")]),v._v(" "),_("li",[_("strong",[v._v("时间轮算法")]),v._v("（Time Wheel）：高效触发定时任务")])])])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Seata（分布式事务）")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("AT模式")]),v._v("：二阶段提交（2PC）的优化版，基于Undo Log回滚")]),v._v(" "),_("li",[_("strong",[v._v("TCC模式")]),v._v("：Try-Confirm-Cancel业务补偿")]),v._v(" "),_("li",[_("strong",[v._v("Saga模式")]),v._v("：长事务拆分为子事务链 + 逆向补偿")])])])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"🔍-五、其他关键组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🔍-五、其他关键组件"}},[v._v("#")]),v._v(" 🔍 五、其他关键组件")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("Hazelcast")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("："),_("strong",[v._v("Paxos协议")]),v._v("（分布式锁） + "),_("strong",[v._v("CRDTs")]),v._v("（无冲突复制数据类型）")]),v._v(" "),_("li",[_("strong",[v._v("功能")]),v._v("：内存网格（In-Memory Data Grid），替代分布式缓存")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Apache ShardingSphere")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心算法")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("分库分表路由")]),v._v("：哈希取模/范围分片")]),v._v(" "),_("li",[_("strong",[v._v("分布式主键")]),v._v("：雪花算法（Snowflake）")])])])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"📊-六、组件与算法对照表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#📊-六、组件与算法对照表"}},[v._v("#")]),v._v(" 📊 六、组件与算法对照表")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[v._v("组件")])]),v._v(" "),_("th",[_("strong",[v._v("类型")])]),v._v(" "),_("th",[_("strong",[v._v("核心分布式算法")])]),v._v(" "),_("th",[_("strong",[v._v("典型场景")])])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("Zookeeper")]),v._v(" "),_("td",[v._v("协调服务")]),v._v(" "),_("td",[v._v("ZAB协议（类Paxos）")]),v._v(" "),_("td",[v._v("分布式锁、配置中心")])]),v._v(" "),_("tr",[_("td",[v._v("Nacos")]),v._v(" "),_("td",[v._v("服务发现/配置中心")]),v._v(" "),_("td",[v._v("Raft（CP模式）、Distro（AP模式）")]),v._v(" "),_("td",[v._v("微服务动态治理")])]),v._v(" "),_("tr",[_("td",[v._v("Kafka")]),v._v(" "),_("td",[v._v("消息队列")]),v._v(" "),_("td",[v._v("KRaft（Raft变种）、ISR机制")]),v._v(" "),_("td",[v._v("高吞吐日志流处理")])]),v._v(" "),_("tr",[_("td",[v._v("Redis Cluster")]),v._v(" "),_("td",[v._v("分布式缓存")]),v._v(" "),_("td",[v._v("哈希槽分片、Gossip协议")]),v._v(" "),_("td",[v._v("高性能缓存、会话存储")])]),v._v(" "),_("tr",[_("td",[v._v("Elasticsearch")]),v._v(" "),_("td",[v._v("搜索分析引擎")]),v._v(" "),_("td",[v._v("PacificA算法、一致性哈希")]),v._v(" "),_("td",[v._v("实时日志分析、全文检索")])]),v._v(" "),_("tr",[_("td",[v._v("Seata")]),v._v(" "),_("td",[v._v("分布式事务")]),v._v(" "),_("td",[v._v("TCC、SAGA、AT（二阶段提交优化）")]),v._v(" "),_("td",[v._v("跨服务事务一致性")])]),v._v(" "),_("tr",[_("td",[v._v("Hazelcast")]),v._v(" "),_("td",[v._v("内存数据网格")]),v._v(" "),_("td",[v._v("Paxos、CRDTs")]),v._v(" "),_("td",[v._v("分布式计算、内存缓存")])]),v._v(" "),_("tr",[_("td",[v._v("Apache Cassandra")]),v._v(" "),_("td",[v._v("分布式数据库")]),v._v(" "),_("td",[v._v("Gossip协议、可调一致性模型")]),v._v(" "),_("td",[v._v("高写入负载的时序数据存储")])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"💎-总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#💎-总结"}},[v._v("#")]),v._v(" 💎 总结")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("算法选择逻辑")]),v._v("：\n"),_("ul",[_("li",[_("strong",[v._v("强一致性场景")]),v._v("（如金融交易）：优先选用Raft/Paxos（Zookeeper、Consul）")]),v._v(" "),_("li",[_("strong",[v._v("高可用与最终一致")]),v._v("（如服务发现）：Gossip协议（Eureka、Redis Cluster）")]),v._v(" "),_("li",[_("strong",[v._v("数据分片需求")]),v._v("：哈希槽（Redis）、一致性哈希（Elasticsearch）")])])]),v._v(" "),_("li",[_("strong",[v._v("开发建议")]),v._v("：\n"),_("ul",[_("li",[v._v("微服务治理选Nacos（AP/CP可选），消息总线用Kafka（高吞吐），缓存用Redis Cluster（自动分片），搜索用ES（近实时分析）。")]),v._v(" "),_("li",[v._v("分布式事务根据业务复杂度选择：简单场景用Seata AT模式，复杂补偿逻辑用TCC/SAGA。")])])])])])}),[],!1,null,null,null);_.default=r.exports}}]);