(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{508:function(r,o,v){"use strict";v.r(o);var e=v(7),_=Object(e.a)({},(function(){var r=this,o=r._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("p",[r._v("/var/run/docker.sock 是 Docker 架构中一个关键的通信接口，其核心作用与使用场景如下：")]),r._v(" "),o("ol",[o("li",[o("p",[o("strong",[r._v("本质与功能")]),r._v("\n• UNIX 域套接字文件")]),r._v(" "),o("p",[o("code",[r._v("/var/run/docker.sock")]),r._v(" 是 Docker 守护进程（dockerd）默认监听的 UNIX 域套接字文件，用于接收来自客户端的 API 请求。它本质上是宿主机上的一个特殊文件，作为 Docker 引擎与客户端（如 "),o("code",[r._v("docker")]),r._v(" 命令行工具）之间的通信桥梁。\n• 权限与通信机制")]),r._v(" "),o("p",[r._v("该套接字文件默认权限为 "),o("code",[r._v("srw-rw----")]),r._v("，所有者是 root，所属组为 docker 组，只有具备权限的进程才能通过它与 Docker 守护进程交互。当客户端发送请求时，守护进程通过该套接字接收并处理指令（如容器管理、镜像操作等），再由 containerd 等组件执行具体操作。")])])]),r._v(" "),o("hr"),r._v(" "),o("ol",{attrs:{start:"2"}},[o("li",[o("p",[o("strong",[r._v("典型应用场景")]),r._v("\n• 容器内操作宿主机 Docker")]),r._v(" "),o("p",[r._v("通过将宿主机的 "),o("code",[r._v("/var/run/docker.sock")]),r._v(" 挂载到容器内（如 "),o("code",[r._v("-v /var/run/docker.sock:/var/run/docker.sock")]),r._v("），容器内可安装 Docker 客户端工具，直接操控宿主机的 Docker 环境。例如 Portainer、Kubernetes 等工具通过此方式实现容器编排。\n• 替代 HTTP API")]),r._v(" "),o("p",[r._v("开发者可通过发送 HTTP 请求到该套接字，绕过 Docker CLI 直接调用 Docker API。例如使用 "),o("code",[r._v("curl --unix-socket")]),r._v(" 命令创建或管理容器，甚至监听 Docker 事件流（如容器启停）。")])])]),r._v(" "),o("hr"),r._v(" "),o("ol",{attrs:{start:"3"}},[o("li",[o("p",[o("strong",[r._v("安全风险与注意事项")]),r._v("\n• 权限提升风险")]),r._v(" "),o("p",[r._v("容器若挂载了此套接字，则等同于拥有宿主机 Docker 守护进程的完全控制权，可能导致容器逃逸或宿主机被攻击。因此需严格限制挂载范围，仅限可信容器使用。\n• 权限配置建议")]),r._v(" "),o("p",[r._v("◦ 避免使用 root 用户运行容器，可通过将用户加入 docker 组实现非特权操作。")]),r._v(" "),o("p",[r._v("◦ 定期检查套接字文件权限（推荐 "),o("code",[r._v("660")]),r._v(" 或 "),o("code",[r._v("750")]),r._v("），并确保所属组为 docker。")])])]),r._v(" "),o("hr"),r._v(" "),o("ol",{attrs:{start:"4"}},[o("li",[o("p",[o("strong",[r._v("技术扩展与替代方案")]),r._v("\n• TCP 监听模式")]),r._v(" "),o("p",[r._v("除 UNIX 套接字外，Docker 守护进程可通过 "),o("code",[r._v("-H tcp://0.0.0.0:2375")]),r._v(" 参数开启 TCP 端口监听，适用于跨主机通信，但需配合 TLS 加密以增强安全性。\n• 容器运行时接口（CRI）")]),r._v(" "),o("p",[r._v("在 Kubernetes 等编排系统中，可通过 CRI 直接对接 containerd，减少对 Docker 的依赖。")])])]),r._v(" "),o("hr"),r._v(" "),o("p",[r._v("总结\n"),o("code",[r._v("/var/run/docker.sock")]),r._v(" 是 Docker 生态中实现进程间通信的核心组件，其灵活性与高效性使其在开发调试、运维工具集成中广泛应用，但需严格管理权限以避免安全漏洞。如需进一步了解操作示例（如通过套接字执行 Docker 命令或监听事件），可参考具体实现文档。")])])}),[],!1,null,null,null);o.default=_.exports}}]);