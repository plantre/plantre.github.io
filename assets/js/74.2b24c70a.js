(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{431:function(v,_,t){"use strict";t.r(_);var r=t(7),s=Object(r.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"📚-节点与集群的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#📚-节点与集群的关系"}},[v._v("#")]),v._v(" 📚 节点与集群的关系")]),v._v(" "),_("p",[_("strong",[v._v("节点（Node）"),_("strong",[v._v("是分布式系统中的基本单元，通常指一台物理服务器、虚拟机或容器实例，负责存储数据、处理请求或协调任务。"),_("br"),v._v(" "),_("strong",[v._v("集群（Cluster）")]),v._v(" 是由多个节点组成的逻辑集合，节点间通过协同工作实现")]),v._v("高可用（HA）")]),v._v("、"),_("strong",[v._v("负载均衡")]),v._v("或"),_("strong",[v._v("高性能计算（HPC）")]),v._v("。节点角色可同质（集群）或异质（分布式），但集群中节点通常功能相同（如ZooKeeper节点），通过冗余提升系统可靠性。")]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"🏭-企业生产环境各组件集群部署建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#🏭-企业生产环境各组件集群部署建议"}},[v._v("#")]),v._v(" 🏭 企业生产环境各组件集群部署建议")]),v._v(" "),_("p",[v._v("以下针对Java后端常见分布式组件，结合高可用与性能需求，给出节点配置方案：")]),v._v(" "),_("h4",{attrs:{id:"一、协调与配置服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、协调与配置服务"}},[v._v("#")]),v._v(" 一、协调与配置服务")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[v._v("组件")])]),v._v(" "),_("th",[_("strong",[v._v("最小高可用节点数")])]),v._v(" "),_("th",[_("strong",[v._v("生产推荐节点数")])]),v._v(" "),_("th",[_("strong",[v._v("集群角色与说明")])])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[v._v("ZooKeeper")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3（中小规模）、5（大规模）")]),v._v(" "),_("td",[_("strong",[v._v("奇数节点")]),v._v("（防脑裂），Leader+Follower角色，过半机制（Quorum）确保强一致性。")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("Nacos")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3-5")]),v._v(" "),_("td",[_("strong",[v._v("CP模式")]),v._v("：Raft协议需3节点；"),_("strong",[v._v("AP模式")]),v._v("：Distro协议（Gossip变种）支持3节点高可用。")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("Consul")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3（单数据中心）、5+（多数据中心）")]),v._v(" "),_("td",[_("strong",[v._v("Raft协议")]),v._v("管理Server节点，Client节点无状态；跨数据中心需WAN Gossip同步。")])])])]),v._v(" "),_("h4",{attrs:{id:"二、消息与数据中间件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、消息与数据中间件"}},[v._v("#")]),v._v(" 二、消息与数据中间件")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[v._v("组件")])]),v._v(" "),_("th",[_("strong",[v._v("最小高可用节点数")])]),v._v(" "),_("th",[_("strong",[v._v("生产推荐节点数")])]),v._v(" "),_("th",[_("strong",[v._v("集群角色与说明")])])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[v._v("Kafka")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3-7")]),v._v(" "),_("td",[_("strong",[v._v("Broker节点")]),v._v("，副本因子≥3（容忍1节点故障）；依赖ZooKeeper（或自研KRaft）管理元数据。")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("Redis Cluster")])]),v._v(" "),_("td",[v._v("6（3主+3从）")]),v._v(" "),_("td",[v._v("6+")]),v._v(" "),_("td",[_("strong",[v._v("主从1:1架构")]),v._v("，16384槽位分片；Gossip协议同步状态，主节点故障自动切换。")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("Elasticsearch")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3专用主节点 + N数据节点")]),v._v(" "),_("td",[_("strong",[v._v("主节点")]),v._v("（管理集群）、"),_("strong",[v._v("数据节点")]),v._v("（存储索引）；"),_("code",[v._v("discovery.zen.minimum_master_nodes=N/2+1")]),v._v("防脑裂。")])])])]),v._v(" "),_("h4",{attrs:{id:"三、其他关键组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、其他关键组件"}},[v._v("#")]),v._v(" 三、其他关键组件")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[v._v("组件")])]),v._v(" "),_("th",[_("strong",[v._v("最小高可用节点数")])]),v._v(" "),_("th",[_("strong",[v._v("生产推荐节点数")])]),v._v(" "),_("th",[_("strong",[v._v("集群角色与说明")])])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[v._v("Eureka")])]),v._v(" "),_("td",[v._v("2（理论）、3（生产）")]),v._v(" "),_("td",[v._v("3+")]),v._v(" "),_("td",[_("strong",[v._v("无中心化")]),v._v("，Gossip协议最终一致；自我保护机制防误删节点。")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("RabbitMQ")])]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td",[v._v("3-5")]),v._v(" "),_("td",[_("strong",[v._v("镜像队列")]),v._v("（Mirror Queue）实现数据冗余；需负载均衡分发请求。")])])])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"💎-部署原则总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#💎-部署原则总结"}},[v._v("#")]),v._v(" 💎 部署原则总结")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("奇数节点原则")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("ZooKeeper、Nacos、Consul等依赖过半选举（Quorum）的组件，"),_("strong",[v._v("必须部署奇数节点")]),v._v("（如3/5/7），避免脑裂且容错率更高（3节点容1故障，5节点容2故障）。")]),v._v(" "),_("li",[v._v("偶数节点（如4）容错能力与3节点相同（仅容1故障），但资源利用率低。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("角色分离与扩展性")]),v._v("：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("性能敏感型")]),v._v("（如ES、Kafka）：分离管理节点（Master）与数据节点（Data），避免资源竞争。")]),v._v(" "),_("li",[_("strong",[v._v("水平扩展")]),v._v("：数据分片组件（Redis、ES）按数据量扩容数据节点；协调组件（ZooKeeper）按集群规模扩容。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("跨机房与多数据中心")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("多数据中心部署（如Consul、Nacos）需保证节点间低延迟（<200ms），并通过WAN Gossip同步状态。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("最小资源与生产差异")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("最小节点数仅满足基础高可用，生产环境需根据"),_("strong",[v._v("并发量")]),v._v("（Kafka按吞吐量扩容）、"),_("strong",[v._v("数据规模")]),v._v("（ES分片数）、"),_("strong",[v._v("容灾等级")]),v._v("（Redis跨机房主从）综合调整。")])])])]),v._v(" "),_("blockquote",[_("p",[_("strong",[v._v("注")]),v._v("：实际部署需结合业务SLA、硬件资源及网络拓扑设计。例如：")]),v._v(" "),_("ul",[_("li",[v._v("金融系统强一致场景：优先CP模式（3节点ZooKeeper/Consul）。")]),v._v(" "),_("li",[v._v("高并发读写场景：Redis Cluster至少6节点（3主3从），ES分离主节点与数据节点。")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);